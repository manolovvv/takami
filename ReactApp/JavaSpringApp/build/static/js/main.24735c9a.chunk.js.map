{"version":3,"sources":["Component/Header/LoginAndRegisterButtonsInHeader.js","Component/Header/LogoutButtonInHeader.js","Component/Header/Header2.js","Service/AuthService.js","Component/LoginComponent.js","constants/constants.js","Service/ProductService.js","Component/fragments/ProductFragment.js","Component/allProductsComponent.js","Component/ProductListComponent.js","Component/AddProductComponent.js","Component/AboutMeComponent.js","CartFunctions.js","Component/fragments/ProductInCartFragment.js","Service/RequestService.js","Component/CartComponent.js","Component/RegisterComponent.js","Component/MasterDetailss.js","App.js","serviceWorker.js","index.js"],"names":["LoginAndRegisterButtonsInHeader","to","Button","variant","Component","LogoutButtonInHeader","props","handleClick","bind","event","alert","sessionStorage","clear","window","location","reload","getItem","width","id","height","viewBox","className","fill","xmlns","fillRule","d","type","onClick","this","Header","useState","role","setRole","useEffect","console","log","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","AUTH_API_BASE_URL","username","password","axios","post","email","firstName","familyName","address","adress","LoginComponent","state","handleSubmit","handleChange","setState","target","name","value","AuthService","login","then","res","setItem","data","jwt","history","push","catch","error","preventDefault","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","withRouter","options","headers","PRODUCT_API_BASE_URL","get","productId","delete","getProducts","localStorage","put","quantity","price","description","productType","amount","ProductFragment","Card","style","key","Img","src","Body","Title","Text","available","ProductService","setProductUnavailable","setProductAvailable","ProductListComponent","ListProductCards","products","productsToShow","filter","product","map","index","ProductInList","JSON","stringify","parse","allProducts","allProductsToShow","Container","Row","Col","sm","AddProductComponent","itemToAdd","handleDropdownChange","getAttribute","addNewProduct","Dropdown","Menu","AboutMeComponent","a","cartItems","Array","isArray","length","i","splice","removeItem","ProductInCartFragment","parseFloat","toFixed","cartFunctions","userId","REQUEST_API_BASE_URL","Constants","CartComponent","productsInCart","productInCart","RequestService","makeRequest","status","fluid","q","RegisterComponent","register","MasterDetails","pathToImage","setProduct","useParams","getProduct","item","split","desc","existsInCart","itemInCart","CartFunctions","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.24735c9a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\n\r\nclass LoginAndRegisterButtonsInHeader extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/login\">\r\n                    <Button variant=\"outline-info\">Login</Button>\r\n                </Link>\r\n                <Link to=\"/register\">\r\n                <Button variant=\"outline-info\">Register</Button>\r\n                </Link>            \r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default LoginAndRegisterButtonsInHeader","import React,{Component} from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\n\r\n\r\nclass LogoutButtonInHeader extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    };\r\n\r\n    handleClick(event){\r\n        alert(\"loggedOut\");\r\n        sessionStorage.clear();\r\n        window.location.reload();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/myCart\">\r\n                    {(sessionStorage.getItem('role') === \"ROLE_USER\")? <svg width=\"3em\" id=\"cart-icon\" height=\"3em\" viewBox=\"0 0 16 16\" className=\"bi bi-cart\" fill=\"blue\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path fillRule=\"evenodd\" d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm7 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"/>\r\n</svg>:<div></div>}\r\n                    </Link>\r\n                <Link to=\"/products\">\r\n                    <Button type =\"submit\" variant=\"outline-info\" onClick={this.handleClick}>Logout</Button>\r\n                    </Link>\r\n                    \r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogoutButtonInHeader","import React, {  useEffect,useState } from 'react'\r\nimport './Header.css'\r\n\r\nimport { Navbar, Nav, NavDropdown} from 'react-bootstrap'\r\nimport LoginAndRegisterButtonsInHeader from './LoginAndRegisterButtonsInHeader'\r\nimport LogoutButtonInHeader from './LogoutButtonInHeader'\r\n\r\nconst Header =(props)=> {\r\n\r\n    \r\n    const[role,setRole] = useState();\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n    setRole(sessionStorage.getItem('role'));    \r\n    },[]);\r\n    console.log(sessionStorage.getItem(\"JWTToken\"))\r\n    return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Brand href=\"/products\">Takami</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      {/* <Nav.Link href=\"/home\">Home</Nav.Link> */}\r\n      <Nav.Link href=\"/aboutme\">About me</Nav.Link>\r\n      {/* <Nav.Link href=\"/contactme\">Contact me</Nav.Link> */}\r\n     {role === \"ROLE_ADMIN\" ?<Nav.Link href=\"/addNewProduct\">Add new product</Nav.Link>: null} \r\n      <NavDropdown title=\"Categories\" id=\"basic-nav-dropdown\">\r\n        <NavDropdown.Item href=\"/products/rods\">Rods</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"/products/reels\">Reels</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"/products/hooks\">Hooks</NavDropdown.Item>\r\n      </NavDropdown>\r\n    </Nav>\r\n    {sessionStorage.getItem(\"JWTToken\")?<LogoutButtonInHeader/>:<LoginAndRegisterButtonsInHeader/>}\r\n    {/* <LoginAndRegisterButtonsInHeader /> */}\r\n    {/* <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" class=\"bi bi-cart\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path fill-rule=\"evenodd\" d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm7 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"/>\r\n</svg> */}\r\n    \r\n  </Navbar.Collapse>\r\n</Navbar>\r\n)\r\n  }\r\n\r\n\r\n\r\nexport default Header","import axios from 'axios'\r\n\r\nconst AUTH_API_BASE_URL = \"http://localhost:8080/\"\r\n\r\n\r\nclass AuthService{\r\n    login(username,password){\r\n        return axios.post(AUTH_API_BASE_URL+\"signin\",\r\n            {\r\n             \r\n                    username: username,\r\n                    password: password\r\n               \r\n            });\r\n    }\r\n\r\n    register(username, password, email, firstName, familyName, address){\r\n        return axios.post(AUTH_API_BASE_URL+\"signup\",\r\n        {\r\n            username:username,\r\n            password:password,\r\n            email:email,\r\n            firstName:firstName,\r\n            familyName:familyName,\r\n            adress:address\r\n        } );\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default new AuthService()","import React, { Component } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { withRouter } from 'react-router-dom'\r\nimport AuthService from '../Service/AuthService'\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    };\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const { username, password } = this.state;\r\n\r\n            AuthService.login(username, password).then((res) => {\r\n            sessionStorage.clear();\r\n            console.log(res);\r\n            sessionStorage.setItem('JWTToken', res.data.jwt);\r\n            console.log(sessionStorage.getItem('JWTToken'));\r\n            sessionStorage.setItem(\"loggedIn\", true);\r\n            sessionStorage.setItem(\"loggedInNow\", true);\r\n            sessionStorage.setItem(\"role\",res.data.role);\r\n            sessionStorage.setItem(\"id\",res.data.id);\r\n            this.props.history.push('/products');\r\n            window.location.reload()\r\n            \r\n        }).catch(error => alert(\"Bad credentials\"));\r\n        event.preventDefault();\r\n        \r\n        \r\n       \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Group controlId=\"formBasicUsername\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick= {this.handleSubmit}>\r\n                    Login\r\n  </Button>\r\n            </Form>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default withRouter(LoginComponent);\r\n","export const options = {\r\n    headers : {\"Authorization\": \"Bearer \"+sessionStorage.getItem(\"JWTToken\")}\r\n};\r\n\r\n","import axios from 'axios'\r\nimport { options } from '../constants/constants';\r\n\r\nconst PRODUCT_API_BASE_URL = \"http://localhost:8080/products\"\r\n\r\n\r\nclass ProductService{\r\n    getProducts(){\r\n        return axios.get(PRODUCT_API_BASE_URL);\r\n    }\r\n\r\n    getProduct(productId){\r\n        return axios.get(PRODUCT_API_BASE_URL+\"/\"+productId);\r\n    }\r\n\r\n    async setProductUnavailable(productId){\r\n        await axios.delete(PRODUCT_API_BASE_URL+\"/\"+productId,options);\r\n          this.getProducts().then((res)=> localStorage.setItem('allProducts',res.data));\r\n          window.location.reload();\r\n          \r\n    }\r\n    async setProductAvailable(productId){\r\n         axios.put(PRODUCT_API_BASE_URL+\"/\"+productId,{},options);\r\n         this.getProducts().then((res)=> localStorage.setItem('allProducts',res.data));\r\n         window.location.reload();\r\n    }\r\n\r\n   async addNewProduct(name,quantity,price,description,productType){\r\n        return await axios.post(PRODUCT_API_BASE_URL,\r\n            {\r\n                amount: quantity,\r\n                price: price,\r\n                name: name,\r\n                productType: productType,\r\n                description: description\r\n            \r\n            },options);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default new ProductService();","import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport ProductService from '../../Service/ProductService'\r\n\r\n\r\nconst ProductFragment = (props) => {\r\n    return (\r\n        <Card style={{ width: '15rem' }} key={props.id}>\r\n            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n\r\n            <Card.Body>\r\n                <Card.Title>{props.name}</Card.Title>\r\n                <Card.Text>\r\n                    price: {props.price}<br />\r\n                                quantity: {props.amount}<br />\r\n                                id: {props.id}\r\n                </Card.Text>\r\n                \r\n                    <Button variant=\"primary\" onClick={()=>{window.location.href = \"/masterDetails/\"+props.id }} >See more details</Button>\r\n                    {sessionStorage.getItem('role')===\"ROLE_ADMIN\"&& props.available ===true ? <Button variant=\"danger\" onClick={()=>ProductService.setProductUnavailable(props.id)} >Make item unavailable</Button>:null}\r\n                    {sessionStorage.getItem('role')===\"ROLE_ADMIN\"&& props.available ===false ? <Button variant=\"success\" onClick={()=>ProductService.setProductAvailable(props.id)} >Make item available</Button>:null}\r\n               \r\n                \r\n            </Card.Body>\r\n\r\n        </Card>\r\n    )\r\n}\r\nexport default ProductFragment;","import React, { Component } from 'react'\r\nimport ProductService from '../Service/ProductService'\r\nimport {  Container, Row, Col } from 'react-bootstrap'\r\nimport { options } from '../constants/constants'\r\nimport \"./ProductListComponent.css\"\r\nimport ProductInList from \"./fragments/ProductFragment\"\r\n\r\nclass ProductListComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            products: []\r\n        }\r\n        this.ListProductCards = this.ListProductCards(this);\r\n    }\r\n\r\n\r\n\r\n   async componentDidMount() {\r\n        \r\n       await ProductService.getProducts(options).then((res) => {\r\n            localStorage.setItem(\"allProducts\", JSON.stringify(res.data));\r\n            \r\n          })\r\n\r\n\r\n        let allProducts = await JSON.parse(localStorage.getItem(\"allProducts\"));\r\n        console.log(this.props.productType);\r\n        let allProductsToShow\r\n        if(sessionStorage.getItem('role') ===\"ROLE_ADMIN\"){\r\n             allProductsToShow = allProducts;\r\n        }\r\n        else{\r\n             allProductsToShow = allProducts.filter(product=> product.available ===true);\r\n        }\r\n        console.log(allProductsToShow);\r\n        this.setState({ products: allProductsToShow })/*, () =>*/ \r\n        //console.log(this.state.products));\r\n        \r\n        //console.log(JSON.parse(localStorage.getItem(\"allProducts\")));\r\n\r\n\r\n    }\r\n\r\n    ListProductCards = (products) => {\r\n        console.log()\r\n        console.log(this.state.products)\r\n        let productsToShow = this.state.products.filter(product=> product.productType ===this.props.productType)\r\n        console.log(productsToShow);\r\n        productsToShow.map(\r\n            (product, index) => {\r\n           \r\n                return (\r\n                   \r\n                    ProductInList(product)\r\n                )\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <Container>\r\n                    <Row>\r\n                        {\r\n                            this.state.products.map(\r\n                                (product, index) => {\r\n                                    // if((index+1)%3 ===0){\r\n                                    //     return (\r\n                                           \r\n                                    //         <Col sm key={product.id}> {ProductInList(product)}</Col>\r\n                                          \r\n                                    //     )\r\n                                    // }\r\n                                    return (\r\n\r\n                                        <Col sm key={product.id}> {ProductInList(product)}</Col>\r\n\r\n                                    )\r\n                                }\r\n                            )}\r\n                    </Row>\r\n                    {/* {this.ListProductCards(this.state.products)} */}\r\n                </Container>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default ProductListComponent","import React, { Component } from 'react'\r\nimport ProductService from '../Service/ProductService'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { options } from '../constants/constants'\r\nimport \"./ProductListComponent.css\"\r\nimport ProductInList from \"./fragments/ProductFragment\"\r\n\r\nclass ProductListComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            products: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n    let allProducts;\r\n       await ProductService.getProducts(options).then((res) => {\r\n           localStorage.setItem(\"allProducts\", JSON.stringify(res.data));\r\n            allProducts = res.data;\r\n          })\r\n        \r\n        \r\n        console.log(\"ptyper\")\r\n        console.log(this.props.productType);\r\n        let allProductsToShow\r\n        if(sessionStorage.getItem('role') ===\"ROLE_ADMIN\"){\r\n             allProductsToShow = allProducts.filter(product=>product.productType === this.props.productType);\r\n        }\r\n        else{\r\n             allProductsToShow = allProducts.filter(product=>product.productType ===this.props.productType && product.available ===true);\r\n        }\r\n        console.log(allProductsToShow);\r\n        await this.setState({ products: allProductsToShow })\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <Container>\r\n                    <Row >\r\n                        {\r\n                            this.state.products.map(\r\n                                (product, index) => {\r\n                                    \r\n                                    return (\r\n                                        \r\n                                        <Col sm key={product.id}> {ProductInList(product)}</Col>\r\n\r\n                                    )\r\n                                }\r\n                            )}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default ProductListComponent","import React, { Component } from 'react'\r\nimport { Dropdown, Form, Button } from 'react-bootstrap'\r\nimport ProductService from '../Service/ProductService'\r\n\r\nclass AddProductComponent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      itemToAdd: \"ROD\",\r\n      name: \"\",\r\n      quantity: 1,\r\n      price: 1,\r\n      description:\"\"\r\n    };\r\n\r\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleDropdownChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n    this.setState({ itemToAdd: event.target.getAttribute(\"value\") });\r\n\r\n    console.log(this.state.itemToAdd);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { itemToAdd, name, quantity, price, description } = this.state;\r\n    console.log(\"odas\")\r\n    console.log(itemToAdd);\r\n    console.log(name);\r\n    console.log(quantity);\r\n    console.log(price);\r\n    console.log(description);\r\n    ProductService.addNewProduct(name,quantity,price,description,itemToAdd).then(res=>{\r\n      alert(res.data);\r\n      \r\n    })\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n\r\n\r\n    if (this.state.quantity < 1) {\r\n      this.setState({\r\n        quantity: 1\r\n      })\r\n    }\r\n\r\n    if (this.state.price < 0.01) {\r\n      this.setState({\r\n        price: 1\r\n      })\r\n    }\r\n\r\n    console.log(this.state[event.target.name]);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n\r\n\r\n\r\n\r\n      <Form onSubmit={this.handleSubmit}>\r\n\r\n        <Dropdown  >\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" >\r\n            {this.state.itemToAdd}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu name=\"itemToAdd\" value={this.state.itemToAdd}  >\r\n            <Dropdown.Item name=\"rod\" onClick={this.handleDropdownChange} value=\"ROD\" >Add new rod</Dropdown.Item>\r\n            <Dropdown.Item name=\"reel\" value=\"REEL\" onClick={this.handleDropdownChange}>Add new reel</Dropdown.Item>\r\n            <Dropdown.Item name=\"hook\" value=\"HOOK\" onClick={this.handleDropdownChange}>Add new line</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n        <Form.Group controlId=\"formBasicName\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicQuantity\">\r\n          <Form.Label>Quantity</Form.Label>\r\n          <Form.Control type=\"number\" placeholder=\"Quantity\" name=\"quantity\" value={this.state.quantity} onChange={this.handleChange} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPrice\">\r\n          <Form.Label>Price</Form.Label>\r\n          <Form.Control type=\"number\" placeholder=\"Price\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicName\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Description\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n          Add product\r\n  </Button>\r\n      </Form>\r\n\r\n    );\r\n  }\r\n}\r\nexport default AddProductComponent;","import React from 'react'\r\n\r\nconst AboutMeComponent = () =>{\r\n    return(\r\n        <div>\r\n        <h1>Information about me</h1>\r\n        \r\n        <h4>My name is Moni. I have been studying in Fontys for year and a half. I am from Sofia, Bulgaria.</h4>\r\n        <h4>Fishing is my main hobby and I want to transform it to my business</h4>\r\n        </div>\r\n        )\r\n\r\n\r\n}\r\n\r\nexport default AboutMeComponent;","\r\n\r\nexport function addToCart (productId,quantity){\r\n   \r\n   \r\n    let cartItems = [];\r\n    if(JSON.parse(sessionStorage.getItem(\"cart\")) ==null){\r\n        sessionStorage.setItem(\"cart\",JSON.stringify({productId, quantity}));\r\n        console.log(1);\r\n\r\n    }\r\n    else if(!Array.isArray(JSON.parse(sessionStorage.getItem(\"cart\")))){\r\n        let itemInCart = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n        console.log(itemInCart);\r\n        if(itemInCart.productId ===productId){\r\n            itemInCart.quantity +=quantity;\r\n            sessionStorage.setItem(\"cart\",JSON.stringify(itemInCart));\r\n        }\r\n        else{\r\n        cartItems.push(JSON.parse(sessionStorage.getItem(\"cart\")));\r\n        cartItems.push({productId,quantity});\r\n        sessionStorage.setItem(\"cart\",JSON.stringify(cartItems));}\r\n        console.log(2);\r\n    }\r\n    else{\r\n        console.log(3);\r\n        cartItems = JSON.parse(sessionStorage.getItem(\"cart\"));\r\n        \r\n        let existsInCart = false;\r\n        //cartItems.push({productId,quantity});\r\n        console.log(cartItems.length);\r\n        //sessionStorage.setItem(\"cart\",JSON.stringify(cartItems));\r\n        //console.log(cartItems);\r\n        for(let i=0;i<cartItems.length;i++){\r\n            if(cartItems[i].productId === productId){\r\n                cartItems[i].quantity+= quantity;\r\n                existsInCart = true;\r\n                sessionStorage.setItem(\"cart\",JSON.stringify(cartItems));\r\n            }\r\n        }\r\n        if(!existsInCart){\r\n            cartItems.push({productId,quantity});\r\n            sessionStorage.setItem(\"cart\",JSON.stringify(cartItems));\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport function decreaseProductQuantityFromCart(productId,quantity){\r\n    let cartItems = JSON.parse(sessionStorage.getItem('cart'));\r\n    if(!Array.isArray(cartItems)){\r\n        if(cartItems.productId === productId){\r\n            cartItems.quantity -= quantity;\r\n        }\r\n    }\r\n    else{\r\n    for(let i=0;i<cartItems.length;i++){\r\n        if(cartItems[i] ===productId){\r\n        cartItems[i].quantity -=quantity;\r\n        }\r\n    }\r\n    }\r\n}\r\n\r\nexport function setProductQuantityFromCart(productId,quantity){\r\n    let cartItems = JSON.parse(sessionStorage.getItem('cart'));\r\n    if(!Array.isArray(cartItems)){\r\n        if(cartItems.productId === productId){\r\n            cartItems.quantity = quantity;\r\n        }\r\n    }\r\n    else{\r\n    for(let i=0;i<cartItems.length;i++){\r\n        if(cartItems[i] ===productId){\r\n        cartItems[i].quantity =quantity;\r\n        }\r\n    }\r\n    }\r\n}\r\n\r\nexport function getProductsIdAndQuantityFromCart(){\r\n    let cartItems = JSON.parse(sessionStorage.getItem('cart'));\r\n    return cartItems;\r\n}\r\n\r\n\r\nexport function deleteCart(){\r\n    sessionStorage.removeItem('cart');\r\n}\r\n\r\nexport async function deleteProductFromCart(productId){\r\n    let cartItems = JSON.parse(sessionStorage.getItem('cart'));\r\n  console.log(\"Dasdas\");\r\n    console.log(sessionStorage.getItem('cart'));\r\n    //console.log(\"delete\");\r\n    //console.log(cartItems);\r\n    if(!Array.isArray(cartItems) || (cartItems.length ===1)){\r\n        //console.log(1);\r\n        sessionStorage.removeItem('cart');\r\n    }\r\n    else{\r\n        //console.log(\"delete222\")\r\n    for(let i=0;i<cartItems.length;i++){\r\n        //console.log(cartItems[i].productId+\"cikal\")\r\n        \r\n        if(cartItems[i].productId === productId){\r\n          \r\n         cartItems.splice(i,1);\r\n        console.log(\"sled\");\r\n        console.log(JSON.stringify(cartItems));\r\n        sessionStorage.setItem('cart',JSON.stringify(cartItems))\r\n\r\n        }\r\n        //console.log(cartItems);\r\n    }\r\n    }\r\n    window.location.reload();\r\n}\r\n\r\n","import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport * as cartFunctions from '../../CartFunctions'\r\nimport ProductListComponent from '../ProductListComponent'\r\nimport './ProductInCartFragment.css'\r\nimport * as CartFunctions from '../../CartFunctions';\r\n\r\n\r\n\r\n  const ProductInCartFragment = (props)=>{\r\n  \r\n     return(\r\n     <div className = \"productInCart\">\r\n         <h3>Name: {props.product.name} / Quantity: {props.product.quantity}*{props.product.price}  = {parseFloat(props.product.quantity * props.product.price).toFixed(2)}</h3>\r\n         <Button variant=\"danger\" onClick = {()=>cartFunctions.deleteProductFromCart(props.product.id)}>Delete item from cart</Button>\r\n     \r\n     </div>\r\n     \r\n     )\r\n}\r\nexport default ProductInCartFragment;","import axios from 'axios'\r\nimport * as Constants from '../constants/constants'\r\n\r\nconst REQUEST_API_BASE_URL = \"http://localhost:8080/requests\"\r\n\r\n\r\n\r\nclass RequestService {\r\n    makeRequest(products, userId) {\r\n        return axios.post(REQUEST_API_BASE_URL + /newRequest/ + userId, products, Constants.options);\r\n    }\r\n\r\n}\r\n\r\nexport default new RequestService()","import React, { Component } from 'react'\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\nimport ProductInCartFragment from './fragments/ProductInCartFragment'\r\nimport RequestService from '../Service/RequestService'\r\nimport ProductService from '../Service/ProductService'\r\nimport * as options from '../constants/constants'\r\n\r\n\r\nclass CartComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            productsInCart: [],\r\n            productsToShow: [],\r\n            allProducts: []\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        // this.state.productsInCart:productsInCart\r\n        this.setState({ allProducts: JSON.parse(localStorage.getItem(\"allProducts\")) })\r\n\r\n        await ProductService.getProducts(options).then((res) => {\r\n            localStorage.setItem(\"allProducts\", JSON.stringify(res.data));\r\n            // allProducts = res.data;\r\n            this.setState({ allProducts: JSON.parse(localStorage.getItem(\"allProducts\")) })\r\n        })\r\n\r\n        let allProducts = JSON.parse(localStorage.getItem(\"allProducts\"));\r\n        if (!Array.isArray((JSON.parse(sessionStorage.getItem('cart'))))) {\r\n            let productInCart = (JSON.parse(sessionStorage.getItem('cart')));\r\n            this.setState({ productsInCart: [productInCart] })\r\n            //sessionStorage.setItem('cart', JSON.stringify(this.state.productsInCart));\r\n\r\n\r\n            await this.state.productsInCart.map(\r\n                (product) => {\r\n                    for (let i = 0; allProducts.length; i++) {\r\n                        if (product.productId === allProducts[i]) {\r\n                            this.state.productsToShow.push(allProducts[i]);\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n            console.log(\"11\")\r\n\r\n        }\r\n        else if ((JSON.parse(sessionStorage.getItem('cart'))) === null) {\r\n            console.log(\"22\")\r\n            await this.setState({ productsInCart: [] });\r\n\r\n        }\r\n        else {\r\n            console.log(\"33\")\r\n            await this.setState({ productsInCart: (JSON.parse(sessionStorage.getItem('cart'))) });\r\n            console.log(this.state.productsInCart);\r\n            console.log(\"12312\")\r\n\r\n            sessionStorage.setItem('cart', JSON.stringify(this.state.productsInCart));\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    handleSubmit(event) {\r\n\r\n        const id = sessionStorage.getItem('id');\r\n        const products = this.state.productsInCart;\r\n        console.log(products);\r\n\r\n        RequestService.makeRequest(this.state.productsInCart, id).then((res) => {\r\n            console.log(res);\r\n            if (res.status === 200) {\r\n                alert(\"Request has been made!\");\r\n            }\r\n        });\r\n\r\n\r\n        //     AuthService.login(username, password).then((res) => {\r\n        //     sessionStorage.clear();\r\n        //     console.log(res);\r\n        //     sessionStorage.setItem('JWTToken', res.data.jwt);\r\n        //     console.log(sessionStorage.getItem('JWTToken'));\r\n        //     sessionStorage.setItem(\"loggedIn\", true);\r\n        //     sessionStorage.setItem(\"role\",res.data.role);\r\n        //     sessionStorage.setItem(\"id\",res.data.id);\r\n\r\n        // })\r\n        // this.props.history.push('/products');\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        // let allProducts =  JSON.parse(localStorage.getItem(\"allProducts\"));\r\n        let allProducts = this.state.allProducts;\r\n        console.log(\"render\")\r\n        console.log(this.state.allProducts)\r\n        return (\r\n            <div>\r\n                <h1>My Cart</h1>\r\n                <Container fluid>\r\n                    {\r\n                        this.state.productsInCart.map(\r\n                            (product, index) => {\r\n                                // console.log(allProducts.length)\r\n                                if (product !== null) {\r\n                                    let q = product.quantity;\r\n                                    for (let i = 0; i < allProducts.length; i++) {\r\n                                        if (allProducts[i].id === product.productId) {\r\n                                            product = allProducts[i];\r\n                                            product.quantity = q;\r\n                                            console.log(product);\r\n                                        }\r\n                                    }\r\n                                    return (\r\n\r\n\r\n                                        <Row key={index}>\r\n                                            <Col>\r\n                                                <ProductInCartFragment product={product} />\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    )\r\n                                }\r\n                            }\r\n                        )\r\n                    }\r\n                </Container>\r\n                <Button variant=\"primary\" onClick={this.handleSubmit} >Make a request</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartComponent;","import React, { Component } from 'react'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport AuthService from '../Service/AuthService'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass RegisterComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            email:\"\",\r\n            firstName:\"\",\r\n            familyName:\"\",\r\n            address:\"\"\r\n\r\n\r\n        };\r\n\r\n       this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n\r\n    };\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { username, password,email,firstName,familyName,address } = this.state;\r\n        console.log(this.state);\r\n\r\n            AuthService.register(username, password,email,firstName,familyName,address).then((res) => {\r\n           \r\n            alert(res.data);\r\n            this.props.history.push('/products');\r\n        })\r\n        \r\n        \r\n        \r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Group controlId=\"formBasicUsername\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicFirstName\">\r\n                    <Form.Label>First name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"First name\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicFamilyName\">\r\n                    <Form.Label>Family name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Family name\" name=\"familyName\" value={this.state.familyName} onChange={this.handleChange} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicAddress\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Address\" name=\"address\" value={this.state.address} onChange={this.handleChange} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\r\n                    Register\r\n                    </Button>\r\n            </Form>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(RegisterComponent);","import React, { useEffect, useState } from 'react'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\nimport ProductService from '../Service/ProductService'\r\nimport * as CartFunctions from '../CartFunctions'\r\n\r\n\r\nconst MasterDetails = (props) => {\r\n\r\n    const [product, setProduct] = useState({\r\n        name: \"name\",\r\n        amount: 0,\r\n        available: true,\r\n        description: [\"desc\",\"desc\"],\r\n        id: 0,\r\n        pathToImage: \"<Image>\",\r\n        price: 0,\r\n        productType: \"ROD\"\r\n    });\r\n\r\n    const { id } = useParams();\r\n\r\n    console.log(\"id\");\r\n    console.log(id);\r\n\r\n    useEffect(() => {\r\n        //let allProducts = JSON.parse(localStorage.getItem('allProducts'));\r\n        ProductService.getProduct(id).then((res) => {\r\n            console.log(res.data);\r\n            let item = res.data;\r\n            let desc = res.data.description;\r\n            let description = desc.split(\"/\");\r\n            item.description = description;\r\n            setProduct(item);\r\n            console.log(item.description);\r\n\r\n        })\r\n\r\n        // console.log(product);\r\n\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <h4>{product.name}</h4>\r\n            <h4>Left: {product.amount}</h4>\r\n            <ul>\r\n            {\r\n                product.description.map((desc,index)=>{\r\n                   return <li key = {index}>{desc}</li>\r\n                }\r\n\r\n                )\r\n            }\r\n            </ul>\r\n            <h4>Price: €{product.price}</h4>\r\n            <Button variant=\"primary\" onClick={()=> CartFunctions.addToCart(product.id,1)}>Add item to cart</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MasterDetails;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Component/Header/Header2'\r\nimport LoginComponent from './Component/LoginComponent'\r\nimport AllProductsComponent from './Component/allProductsComponent';\r\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\r\nimport ProductListComponent from './Component/ProductListComponent';\r\nimport AddProductComponent from \"./Component/AddProductComponent\";\r\nimport AboutMeComponent from './Component/AboutMeComponent'\r\nimport CartComponent from './Component/CartComponent'\r\nimport RegisterComponent from './Component/RegisterComponent'\r\nimport MasterDetails from './Component/MasterDetailss'\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Router >\r\n      <Route>\r\n      <Header />\r\n      </Route>\r\n      <Route exact path =\"/products\">\r\n      <AllProductsComponent />\r\n      </Route> \r\n      <Route path = \"/login\">\r\n        <LoginComponent/>\r\n      </Route>\r\n      <Route path =\"/products/rods\">\r\n      <ProductListComponent productType = \"ROD\"/>\r\n      </Route> \r\n      <Route path =\"/products/reels\">\r\n      <ProductListComponent productType = \"REEL\"/>\r\n      </Route> \r\n      <Route path =\"/products/hooks\" >\r\n      <ProductListComponent productType = \"HOOK\"/>\r\n      </Route> \r\n      <Route path = \"/aboutme\">\r\n      <AboutMeComponent/>\r\n      </Route> \r\n      <Route path = \"/register\">\r\n        <RegisterComponent/>\r\n      </Route>\r\n      <Route path=\"/myCart\">\r\n        <CartComponent/>\r\n      </Route>\r\n      <Route path=\"/masterDetails/:id\">\r\n        <MasterDetails/>\r\n      </Route>\r\n      <Route path=\"/addNewProduct\">\r\n      <AddProductComponent/>\r\n      </Route>\r\n    </Router>\r\n     \r\n  \r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}